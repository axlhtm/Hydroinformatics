print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m+biaya.tambahan.m,'Rupiah'))
}
i.m(8000)
i.m <- function(a){
biaya.tambahan.m <- (a-7500)*q.m
print(paste('Biaya tambahan yang dikenakan pada masyarakat adalah sebesar', biaya.tambahan.m,'rupiah'))
biaya.utama.m <- (a-biaya.tambahan.m)*q.m
print(paste('Biaya utama yang dikenakan pada masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m+biaya.tambahan.m,'Rupiah'))
}
i.m(8000)
# Biaya penggunaan air di tingkat masyarakat
i.m <- function(a){
debit.tambahan.m <- (a-7500)
biaya.tambahan.m <- debit.tambahan.m * q.m
print(paste('Biaya tambahan yang dikenakan pada masyarakat adalah sebesar', biaya.tambahan.m,'rupiah'))
debit.utama.m <- (a-debit.tambahan.m)
biaya.utama.m <- debit.utama.m * q.m
print(paste('Biaya utama yang dikenakan pada masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m+biaya.tambahan.m,'Rupiah'))
}
i.m(8000)
# Kalkulasi Tarif air yang dikenakan pada tiap instansi
m0 <- 1000                                         #Tarif utama untuk masyarakat
m1 <- 1200                                         #Tarif tambahan untuk masyarakat
p0 <- 800                                          #Tarif utama untuk pemerintah
p1 <- 1000                                         #Tarif tambahan untuk pemerintah
i0 <- 1200                                         #Tarif utama untuk industri
i1 <- 1400                                         #Tarif tambahan untuk industri
a <- 0
# Biaya penggunaan air di tingkat masyarakat
i.m <- function(a){
debit.tambahan.m <- (a-7500)
biaya.tambahan.m <- debit.tambahan.m * m.1
print(paste('Biaya tambahan yang dikenakan pada masyarakat adalah sebesar', biaya.tambahan.m,'rupiah'))
debit.utama.m <- (a-debit.tambahan.m)
biaya.utama.m <- debit.utama.m * m.0
print(paste('Biaya utama yang dikenakan pada masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m+biaya.tambahan.m,'Rupiah'))
}
i.m(8000)
i.m <- function(a){
debit.tambahan.m <- (a-7500)
biaya.tambahan.m <- debit.tambahan.m * m1
print(paste('Biaya tambahan yang dikenakan pada masyarakat adalah sebesar', biaya.tambahan.m,'rupiah'))
debit.utama.m <- (a-debit.tambahan.m)
biaya.utama.m <- debit.utama.m * m0
print(paste('Biaya utama yang dikenakan pada masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m+biaya.tambahan.m,'Rupiah'))
}
i.m(8000)
i.m <- function(a){
debit.tambahan.m <- (a-200)
biaya.tambahan.m <- debit.tambahan.m * m1
print(paste('Biaya tambahan yang dikenakan pada masyarakat adalah sebesar', biaya.tambahan.m,'rupiah'))
debit.utama.m <- (a-debit.tambahan.m)
biaya.utama.m <- debit.utama.m * m0
print(paste('Biaya utama yang dikenakan pada masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m+biaya.tambahan.m,'Rupiah'))
}
i.m(300)
i.m(200)
i.m(150)
i.m <- function(a){
if (a>=200){
debit.tambahan.m <- (a-200)
biaya.tambahan.m <- debit.tambahan.m * m1
print(paste('Biaya tambahan yang dikenakan pada masyarakat adalah sebesar', biaya.tambahan.m,'rupiah'))
debit.utama.m <- (a-debit.tambahan.m)
biaya.utama.m <- debit.utama.m * m0
print(paste('Biaya utama yang dikenakan pada masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m+biaya.tambahan.m,'Rupiah'))
}
else if (a<200){
biaya.utama.m <- a * m0
print(paste('Biaya utama yang dikenakan pada masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m,'Rupiah'))
}
}
i.m(300)
i.m(200)
i.m(150)
# Biaya penggunaan air untuk kelas masyarakat
i.m <- function(d.m){
if (d.m>=200){
debit.tambahan.m <- (d.m-200)
biaya.tambahan.m <- debit.tambahan.m * m1
print(paste('Biaya tambahan yang dikenakan pada masyarakat adalah sebesar', biaya.tambahan.m,'rupiah'))
debit.utama.m <- (d.m-debit.tambahan.m)
biaya.utama.m <- debit.utama.m * m0
print(paste('Biaya utama yang dikenakan pada masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m+biaya.tambahan.m,'Rupiah'))
}
else if (d.m<200){
biaya.utama.m <- d.m * m0
print(paste('Biaya utama yang dikenakan pada masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada masyarakat adalah sebesar', biaya.utama.m,'Rupiah'))
}
}
i.m(200)
# Biaya penggunaaan air untuk kelas sektor pemerintah
i.p <- function(d.p){
if (d.p>=180){
debit.tambahan.p <- (d.p-180)
biaya.tambahan.p <- debit.tambahan.p * p1
print(paste('Biaya tambahan yang dikenakan pada sektor pemerintah adalah sebesar', biaya.tambahan.p,'rupiah'))
debit.utama.p <- (d.p-debit.tambahan.p)
biaya.utama.p <- debit.utama.p * p0
print(paste('Biaya utama yang dikenakan pada sektor pemerintah adalah sebesar', biaya.utama.p,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor pemerintah adalah sebesar', biaya.utama.p+biaya.tambahan.p,'Rupiah'))
}
else if (d.p<180){
biaya.utama.p <- d.p * p0
print(paste('Biaya utama yang dikenakan pada sektor pemerintah adalah sebesar', biaya.utama.p,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor pemerintah adalah sebesar', biaya.utama.p,'Rupiah'))
}
}
i.p(180)
# Biaya penggunaan air untuk sektor industri
i.i <- function(d.i){
if (d.i>=220){
debit.tambahan.i <- (d.i-220)
biaya.tambahan.i <- debit.tambahan.i * i1
print(paste('Biaya tambahan yang dikenakan pada sektor industri adalah sebesar', biaya.tambahan.i,'rupiah'))
debit.utama.i <- (d.i-debit.tambahan.i)
biaya.utama.i <- debit.utama.i * i0
print(paste('Biaya utama yang dikenakan pada sektor industri adalah sebesar', biaya.utama.i,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor industri adalah sebesar', biaya.utama.i+biaya.tambahan.i,'Rupiah'))
}
else if (d.i<220){
biaya.utama.i <- d.i * i0
print(paste('Biaya utama yang dikenakan pada sektor industri adalah sebesar', biaya.utama.i,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor industri adalah sebesar', biaya.utama.i,'Rupiah'))
}
}
d.i(220)
i.i(220)
i.i (230)
debit.air(2000)
Debit.Air(2000)
#Distribusi debit air
Debit.Air <- function(supply){
if(supply>=20000){
}
}
Debit.Air(2000)
################################################################################
# Perusahaan PDAM di Kota Delft digunakan untuk pemerintah, masyarakat, dan industri. Dengan kententuan sebagai berikut:
# 1. Populasi Masyarakat (M) adalah yang paling besar namun membayar tarif air paling kecil.
# 2. Populasi Pemerintah (P) adalah menengah dengan tarif air rerata.
# 3. Populasi Industri (I) adalah yang paling kecil namun membayar tarif air paling besar.
# Keubutuhan debit iar tiap departemen
q.m <- 7500                                        #Permintaan debit air dari masyarakat
q.p <- 2500                                        #Permintaan debit air dari pemerintah
q.i <- 10000                                       #Permintaan debit air dari industri
q.sum <- q.m + q.p + q.i
# Kalkulasi Tarif air yang dikenakan pada tiap instansi
m0 <- 1000                                         #Tarif utama untuk masyarakat
m1 <- 1200                                         #Tarif tambahan untuk masyarakat
p0 <- 800                                          #Tarif utama untuk pemerintah
p1 <- 1000                                         #Tarif tambahan untuk pemerintah
i0 <- 1200                                         #Tarif utama untuk industri
i1 <- 1400                                         #Tarif tambahan untuk industri
# Biaya penggunaan air untuk sektor masyarakat
i.m <- function(d.m){
if (d.m>=200){
debit.tambahan.m <- (d.m-200)
biaya.tambahan.m <- debit.tambahan.m * m1
print(paste('Biaya tambahan yang dikenakan pada sektor masyarakat adalah sebesar', biaya.tambahan.m,'rupiah'))
debit.utama.m <- (d.m-debit.tambahan.m)
biaya.utama.m <- debit.utama.m * m0
print(paste('Biaya utama yang dikenakan pada sektor masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor masyarakat adalah sebesar', biaya.utama.m+biaya.tambahan.m,'Rupiah'))
}
else if (d.m<200){
biaya.utama.m <- d.m * m0
print(paste('Biaya utama yang dikenakan pada sektor masrayakat adalah sebesar', biaya.utama.m,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor masyarakat adalah sebesar', biaya.utama.m,'Rupiah'))
}
}
# Biaya penggunaaan air untuk sektor pemerintah
i.p <- function(d.p){
if (d.p>=180){
debit.tambahan.p <- (d.p-180)
biaya.tambahan.p <- debit.tambahan.p * p1
print(paste('Biaya tambahan yang dikenakan pada sektor pemerintah adalah sebesar', biaya.tambahan.p,'rupiah'))
debit.utama.p <- (d.p-debit.tambahan.p)
biaya.utama.p <- debit.utama.p * p0
print(paste('Biaya utama yang dikenakan pada sektor pemerintah adalah sebesar', biaya.utama.p,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor pemerintah adalah sebesar', biaya.utama.p+biaya.tambahan.p,'Rupiah'))
}
else if (d.p<180){
biaya.utama.p <- d.p * p0
print(paste('Biaya utama yang dikenakan pada sektor pemerintah adalah sebesar', biaya.utama.p,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor pemerintah adalah sebesar', biaya.utama.p,'Rupiah'))
}
}
# Biaya penggunaan air untuk sektor industri
i.i <- function(d.i){
if (d.i>=220){
debit.tambahan.i <- (d.i-220)
biaya.tambahan.i <- debit.tambahan.i * i1
print(paste('Biaya tambahan yang dikenakan pada sektor industri adalah sebesar', biaya.tambahan.i,'rupiah'))
debit.utama.i <- (d.i-debit.tambahan.i)
biaya.utama.i <- debit.utama.i * i0
print(paste('Biaya utama yang dikenakan pada sektor industri adalah sebesar', biaya.utama.i,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor industri adalah sebesar', biaya.utama.i+biaya.tambahan.i,'Rupiah'))
}
else if (d.i<220){
biaya.utama.i <- d.i * i0
print(paste('Biaya utama yang dikenakan pada sektor industri adalah sebesar', biaya.utama.i,'Rupiah'))
print(paste('Biaya total yang dikenakan pada sektor industri adalah sebesar', biaya.utama.i,'Rupiah'))
}
}
i.m(1200)
im(150)
i.m(150)
q.sum
q.sum <- 7500 + 2500 + 10000
q.sum <- 7500 + 2500 + 10000
# Seq()
seq(1,20)
# Seq()
seq(1,20) # Menuliskan angka 1-20 dalam 1 sequence
# Seq()
seq(1,20)    #Menuliskan angka 1-20 dalam 1 sequence
seq(1,20,3)  #Menuliskan angka 1-20 dengan longkapan 3
# Seq()
seq(1,20)          #Menuliskan angka 1-20 dalam 1 sequence
seq(1,20,3)        #Menuliskan angka 1-20 dalam 1 sequence dengan longkapan 3 angka
seq(5, 34.7, 0.76) #Menuliskan angka 5-34.7 dalam q sequence dengan longkapan 0.76
coba <- c(4,7,9,2,4,5)
sort(coba)
# sort()           #Mengurutkan data numerik dan variabel pada 1 sequence. Bisa diurutkan secara naik ataupun turun.
nilai.ujian <- c(90,20,70,50,40)
# sort()           #Mengurutkan data numerik dan variabel pada 1 sequence. Bisa diurutkan secara naik ataupun turun.
nilai.ujian <- c(90,20,70,50,40)
sort(nilai.ujian)
sort(nilai.ujian, decresasing=FALSE)  #Mengurutkan komponen data numerik secara naik
sort(nilai.ujian, decreasing=FALSE)  #Mengurutkan komponen data numerik secara naik
sort(nilai.ujian, decreasing=TRUE)   #Mengurutkan komponen data numerik secara turun
ipk.siswa <-c(A,C,B,E,F,A)
ipk.siswa <-c(A,C,B,E,F,B)
ipk.siswa <-c('A','C','B','E','F','b')  #Contoh data variable acak pada 1 sequence
sort(ipk.siswa, decreasing=FALSE)       #Mengurutkan komponen data variabel secara naik
sort(ipk.siswa, decreasing=TRUE)        #Mengurutkan komponen data variabel secara turun
# rev()            #Mengurutkan data numerik dan variable pada 1 sequence mulai dari item paling akhir.
nilai.ujian <- c(90,20,70,50,40)
rev(nilai.ujian)
# Str()            #Menunjukan struktur dataset
nilai.ujian <- c(90,20,70,50,40)        #Contoh data numerik acak pada 1 sequence
str(nilai.ujian)
# append()         #Menambahkan item vector pada vector lainnya
append(ipk.siswa, nilai.ujian)          #Menggabungkan vector ipk.siswa dan nilai ujian
# lapply()         #Mengaplikasikan fungsi kedalam list
a <- function (b){
return(b*2)
}
# lapply()         #Mengaplikasikan fungsi kedalam list
a <- function (b){                      #Contoh fungsi
return(b*2)
}
a(nilai.ujian)
a(nilai.ujian)     #Memasukan nilai.ujian kedalam fungsi a
lapply(nilai.ujian, a)
lapply(nilai.ujian, a)                  #Merubah fungsi menjadi list dimana dimasukan nilai.ujian kedalam fungsi a
# sapply()         #Mengaplikasikan fungsi kedalam vector/matriks
hasil <- sapply(nilai,ujian, function(c){c*2})
# sapply()         #Mengaplikasikan fungsi kedalam vector/matriks
hasil <- sapply(nilai.ujian, function(c){c*2})
hasil
nilai.rerata <- function(x,y){
return((x+y)/20)
}
sapply(nilai.ujian, nilai.rerata)
sapply(nilai.ujian, nilai.rerata, y=100)
sapply(nilai.ujian, nilai.rerata, x=100) #Memasukan 1 list dalam fungsi yang memiliki 2 parameter. Salah satu parameter harus didefaultkan
sapply(nilai.ujian, nilai.rerata, y=100) #Memasukan 1 list dalam fungsi yang memiliki 2 parameter. Salah satu parameter harus didefaultkan
# is.XXX()         #Mengecheck jenis data yang terdapat pada suatu komponen
is.vector(nilai.ujian)
is.data.frame(nilai.ujian)
is.data.frame(nilai.ujian)              #Mengecheck apakah jenis data nilai.ujian adalah data frame. Hasilnya adalah salah (FALSE).
is.na(nilai.ujian)
is.na(nilai.ujian)                      #Tidak ada data yang hilang
is.na(nilai.ujian)                      #Tidak ada data yang hilang, maka semua FALSE
nilai.ujian.baru <- c(0,5,10,NA,15)     #Terdapat data yang hilang
nilai.ujian.baru
is.na(nilai.ujian.baru)
is.na(nilai.ujian.baru)                 #Terdapat data yang hilang, maka tertulis TRUE pada set data ke 4
Sys.Date
Sys.Date()
class(Sys.Date)
class(Sys.Date())
class(12)
class('character')
## ANALISA DATA WAKTU DI R
# Tahun-bulan-tanggal
waktu <- Sys.Date()
class(waktu)
## ANALISA DATA WAKTU DI R
# Sistem waktu yang di set default adalah menggunakan susunan "Tahun-Bulan-Tanggal
waktu <- Sys.Date()        #Menunjukan waktu pada sistem
waktu2 <- '17
waktu2 <- '17-Aug-1945'
waktu2 <- '17-Aug-1945'
waktu2 <- as.Date(waktu2, format='%d-%b-%Y')
# Cara merubah susunan waktu
waktu2 <- '17-Aug-1945'                         #Jika tulisan '17-Aug-1945' dicek menggunakan class() maka akan terdeteksi sebagai karakter
# Cara merubah susunan waktu
waktu2 <- '17-Aug-1945'                         #Jika tulisan '17-Aug-1945' dicek menggunakan class() maka akan terdeteksi sebagai karakter
waktu2 <- as.Date(waktu2, format='%d-%b-%Y')    #Merubah tulisan tersebut menjadi format tanggal, '%d' adalah tanggal, '%b' adalah bulan angka, dan '%Y' adalah tahun angka penuh
waktu2 <- as.Date(waktu2, format='%d-%B-%Y')    #Merubah tulisan tersebut menjadi format tanggal, '%d' adalah tanggal, '%b' adalah bulan angka, dan '%Y' adalah tahun angka penuh
waktu2 <- as.Date(waktu2, format='%d-%B-%Y')    #Merubah tulisan tersebut menjadi format tanggal, '%d' adalah tanggal, '%b' adalah bulan angka, dan '%Y' adalah tahun angka penuh
waktu2 <- as.Date(waktu2, format='%d-%b-%Y')    #Merubah tulisan tersebut menjadi format tanggal, '%d' adalah tanggal, '%b' adalah bulan angka, dan '%Y' adalah tahun angka penuh
help("as.Date")
help("as.Date")
waktu2 <- as.Date(waktu2, format='%d-%B-%Y')    #Merubah tulisan tersebut menjadi format tanggal, '%d' adalah tanggal, '%b' adalah bulan angka, dan '%Y' adalah tahun angka penuh
waktu2 <- as.Date(waktu2, format='%d-%b-%Y')    #Merubah tulisan tersebut menjadi format tanggal, '%d' adalah tanggal, '%b' adalah bulan angka, dan '%Y' adalah tahun angka penuh
# Cara merubah susunan waktu
waktu2 <- '17-Aug-1945'                         #Jika tulisan '17-Aug-1945' dicek menggunakan class() maka akan terdeteksi sebagai karakter
waktu2 <- as.Date(waktu2, format='%d-%B-%Y')    #Merubah tulisan tersebut menjadi format tanggal, '%d' adalah tanggal, '%b' adalah bulan angka, dan '%Y' adalah tahun angka penuh
waktu2 <- as.Date(waktu2, format='%d-%b-%Y')    #Merubah tulisan tersebut menjadi format tanggal, '%d' adalah tanggal, '%b' adalah bulan angka, dan '%Y' adalah tahun angka penuh
# Cara merubah susunan waktu jam
as.POSIXct('10:15:40', format='%H:%M:%S')
# Cara merubah susunan waktu jam
as.POSIXct('10:15:40', format='%H:%M:%S')       #Simbol '%H' merujuk pada jam, '%M' pada menit, dan '%S' adalah detik
as.POSIXct('Nov,10,1976 '00:01:50', format='%b,%d,%Y %H:%M:S')
as.POSIXct('Nov,10,1976 00:01:50', format='%b,%d,%Y %H:%M:S')
as.POSIXct('Nov,10,1976 00:01:50', format='%b,%d,%Y %H:%M:S')
as.POSIXct('Nov,10,1976 00:10:50', format='%b,%d,%Y %H:%M%S')
as.POSIXct('Nov,10,1976 00:01:50', format='%b,%d,%Y %H:%M:S')
as.POSIXct('Nov,10,1976 00:01:50', format='%b,%d,%Y %H:%M:%S)
as.POSIXct('Nov,10,1976 00:01:50', format='%b,%d,%Y %H:%M:%S')
as.POSIXct('Nov,10,1976 00:01:50', format='%b,%d,%Y %H:%M:%S')
as.POSIXct('Nov,10,1976 00:01:50', format='%b,%d,%Y %H:%M:%S')
strptime('Nov,10,1976 00:01:50', format='%b, %d, %Y %H:%M:%S')
install.packages("dplyr")
library(dplyr)
library(dplyr)
library(nycflights123)
install.packages("nycflights13")
library(nycflights123)
install.packages("nycflights13")
library(nycflights123)
library(nycflights13)
dataku <- flights
summary(dataku)
dataku <- cbind(nomor = rownames(dataku), dataku)
View(dataku)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==8, dest=='IND' )
dataku <- cbind(nomor = rownames(dataku), dataku)
summary(dataku)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==8, dest=='IND' )
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, carrier=='UA', dest=='IND')
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, dest=='IND')
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, hour==5)
library(dplyr)
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(dplyr)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, hour==5)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, hour==5)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15)
### MANIPULASI DATA DENGAN (Dplyr) di R
#INSTAL LIBRARY (Dplyr)
library(dplyr)                    #Menginstall fungsi dplyr
library(nycflights13)             #Contoh data penerbangan NYC di tahun 2013
#MENYIAPKAN ROWNAMES MENJADI KOLOM BARU
dataku <- flights
dataku <- cbind(nomor = rownames(dataku), dataku)
summary(dataku)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==1)
View(baru)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==1, dest==CGK)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==1, dest=='CGK')
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==1, dest=='IND')
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==8, dest=='IND')
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==8, dest=='IND')    #memfiler data dengan ketentuan sesuai dengan nama kolom
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==8, dest=='IND')    #memfiler data dengan ketentuan sesuai dengan nama kolom dengan menggunakan perintah "filter"
baru2 <- dataku[dataku$day==15 & dataku$month==8, dataku$dest=='IND',]
baru2 <- dataku[dataku$day==15 & dataku$month==8 & dataku$dest=='IND',]
baru2 <- dataku[dataku$day==15 & dataku$month==8 & dataku$dest=='IND',]    #Memfiler data dengan ketentuan sesuai dengan nama kolom secara manual
View(baru2)
coba <- filter(dataku, day==!15, month>=8, dest=='IND')
coba <- filter(dataku, day==!15, month==8, dest=='IND')
coba <- filter(dataku, !day==15, month==8, dest=='IND')
coba <- filter(dataku, !day==15, month=>8, dest=='IND')
coba <- filter(dataku, !day==15, month>=8, dest=='IND')
View(coba)
coba2 <- dataku[!dataku$day==15 & dataku$month>=8 & dataku$dest='IND']
coba2 <- dataku[dataku$day==15 & dataku$month>=8 & dataku$dest='IND']
coba2 <- dataku[!dataku$day==15 & dataku$month>=8 & dataku$dest='IND', ]
coba2 <- dataku[!dataku$day=15 & dataku$month>=8 & dataku$dest='IND', ]
coba2 <- dataku[dataku$day=15 & dataku$month>=8 & dataku$dest='IND', ]
coba2 <- dataku[dataku$day==15 & dataku$month>=8 & dataku$dest='IND', ]
coba2 <- dataku[dataku$day==15 & dataku$month==8 & dataku$dest='IND', ]
coba2 <- dataku[dataku$day==15 & dataku$month==8 & dataku$dest='IND',]
coba2 <- dataku[dataku$day==15 & dataku$month==8 & dataku$dest='IND',]
coba2 <- dataku[dataku$day==15 & dataku$month==8 & dataku$dest=='IND',]
coba2 <- dataku[!dataku$day==15 & dataku$month>=8 & dataku$dest=='IND',]
# MENYIAPKAN DATASET
dataku <- flights
dataku <- cbind(nomor = rownames(dataku), dataku)
summary(dataku)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==8, dest=='IND')                     #Memfiler data dengan ketentuan sesuai dengan nama kolom dengan menggunakan perintah "filter"
baru2 <- dataku[dataku$day==15 & dataku$month==8 & dataku$dest=='IND',]    #Memfiler data dengan ketentuan sesuai dengan nama kolom secara manual
# INSTAL LIBRARY (Dplyr)
library(dplyr)                    #Menginstall fungsi dplyr
library(nycflights13)             #Contoh data penerbangan NYC di tahun 2013
# MENYIAPKAN DATASET
dataku <- flights
dataku <- cbind(nomor = rownames(dataku), dataku)
#MEMFILTER DATA DENGAN PERINTAH FILTER
baru <- filter(dataku, day==15, month==8, dest=='IND')                     #Memfiler data dengan ketentuan sesuai dengan nama kolom dengan menggunakan perintah "filter"
baru2 <- dataku[dataku$day==15 & dataku$month==8 & dataku$dest=='IND',]    #Memfiler data dengan ketentuan sesuai dengan nama kolom secara manual
axel <- filter(dataku, !day==15, month>=8, dest=='IND')                    #Menggunakan fitur filter
axel2 <- dataku[!dataku$day==15 & dataku$month>=8 & dataku$dest=='IND',]   #Menggunakan cara manual
coba <- filter(dataku, day==15, month==8, dep_time<=2000)                  #Menggunakan fitur filter
coba2<- dataku[dataku$day==15 & dataku$month==8 & dataku$dep_time<=2000,]  #Menggunakan cara manual
coba3<- na.omit(dataku[dataku$day==15 & dataku$month==8 & dataku$dep_time<=2000,])  #Menggunakan cara manual tanpa memasukan data NA
View(coba3)
View(coba2)
View(coba)
for (i in 1:nrow(coba3)){
hitung=0
if (coba$nomor[i] != coba3$nomor[i]){
print(coba$nomor[i])
hitung = hitung+1
break
}
}
# Dari filter tersebut diketahui bahwa data pada coba memiliki nilai NA di baris 293378, sedangkan pada coba3 diperintahkan untuk tidak mengikutsertakan nilai NA pada setiap kolomnya,
coba4<-na.omit(filter(dataku, day==15, month==8, dep_time<=2000))
## CARA MENGGUNAKAN SLICE()
Potong <- slice(dataku, 2:10)
View(Potong)
View(Potong)
dataku2 <- arrange(dataku2, year, month, flight)
## CARA MENGGUNAKAN ARRAGE() untuk mengurutkan berdasarkan kolom yang kita tulis berdasarkan 1 atau lebih paramater
dataku2 <- dataku
dataku2 <- arrange(dataku2, year, month, flight)
View(dataku2)
## CARA MENGGUNAKAN SELECT() UNTUK MEMILIH DATA SPESIFIK PADA DATA SET
pilih <- select(dataku, nomor, carrier, arr_time)
View(pilih)
## MERUBAH NAMA KOLOM DENGAN RENAME()
ganti <- rename(dataku, indeks = nomor)
View(dataku)
View(ganti)
## MERUBAH NAMA KOLOM DENGAN RENAME()
ganti <- rename(dataku, indeks = nomor)                                   #Merubah nama kolom dengan fungsi rename("nama dataset", "nama kolom baru = nama kolom lama")
## MEMILIH ISI DATA YANG UNIK DENGAN PERINTAH DISTINCT()
unik <- distinct(select(dataku, carrier))                                 #Memilih data yang unik, atau membuat list atas variabel yang berbeda pada dataset
View(unik)
## MENAMBAH KOLOM BARU YANG MERUPAKAN HASIL ALGORITMA BEBERAPA KOLON DENGAN PERINTAH MUTATE()
tambah <- mutate(dataku, kol_baru = arr_delay - dep_delay)
View(tambah)
tambah <- select(tambah, nomor, kol_baru, arr_delay, dep_delay)
## MENAMBAH KOLOM BARU SEPERTI MUTATE() TAPI TIDAK MENAMPILKAN KOLOM LAINNYA DENGAN PERINTAH TRANSMUTE()
khusus <- transmute(dataku, kol_baru = arr_delay - dep_delay)
View(khusus)
## MENAMBAH KOLOM BARU SEPERTI MUTATE() TAPI TIDAK MENAMPILKAN KOLOM LAINNYA DENGAN PERINTAH TRANSMUTE()
khusus <- transmute(dataku, kol_baru = arr_delay - dep_delay, arr_delay, dep_delay)
## MERINGKAS KOLOM DENGAN SUMMARISE()
summarise(dataku, rataan_air_time = mean(air_time, na.rm=TRUE))
## MERINGKAS KOLOM DENGAN SUMMARISE()
summarise(dataku, rataan_air_time = mean(air_time, na.rm=TRUE))           #Menghitung ringkasan atas perintah yang dimasukan, na.rm=TRUE, memerintahkan untuk mengindahkan nilai NA pada data tersebut
## MERINGKAS KOLOM DENGAN SUMMARISE()
summarise(dataku, rataan_air_time = mean(air_time, na.rm=FALSE))           #Menghitung ringkasan atas perintah yang dimasukan, na.rm=TRUE, memerintahkan untuk mengindahkan nilai NA pada data tersebut
## MERINGKAS KOLOM DENGAN SUMMARISE()
summarise(dataku, rataan_air_time = mean(air_time, na.rm=TRUE))           #Menghitung ringkasan atas perintah yang dimasukan, na.rm=TRUE, memerintahkan untuk mengindahkan nilai NA pada data tersebut
## MELAKUKAN SAMPLIT DARI DATA SET SECARA ASAK DENGAN SAMPLE_N()
sample_n(dataku, 10)
sample_frac(dataku, 0,1)
-2+2^0.5
2^0.5
4/0.6
x^4
e
e
a
a -> (x^4)*(2.72^(-2x+1.4x))
nilai a -> (x^4)*(2.72^(-2x+1.4x))
nilai b -> x+y
(x^4)*(2.72^(-2x+1.4x))
(6.7^4)*(2.72^(-2*6.7+1.4*6.7))
(6.8^4)*(2.72^(-2*6.8+1.4*6.8))
(40^4)*(2.72^(-2*40+1.4*40))
(13^4)*(2.72^(-2*13+1.4*13))
(-1^4)*(2.72^(-2*(-1)+1.4*(-1)))
